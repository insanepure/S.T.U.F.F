#version 330 core

 layout(location = 0) in vec3 vertexPosition;
 layout(location = 1) in vec2 vertexUV;
 layout(location = 2) in vec3 vertexColor;
 layout(location = 3) in vec3 vertexNormal;
 layout(location = 4) in mat4 offset;
 layout(location = 8) in vec4 instanceColor;

uniform mat4 Projection;
uniform mat4 View;

out vec2 UV;
out vec4 Color;
out vec3 Normal;

void main()
{
        
        mat4 Model = offset;
	mat4 MVP = Projection * View * Model;
        
        vec3 endpos = vertexPosition;
	vec4 Pos = MVP * vec4(endpos,1);

	gl_Position = Pos;
	
	UV = vertexUV;

	Color = instanceColor;
	Normal = normalize((Model * vec4(vertexNormal,0)).xyz);

}

