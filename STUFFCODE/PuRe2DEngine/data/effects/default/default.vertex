#version 330 core

 layout(location = 0) in vec3 vertexPosition;
 layout(location = 1) in vec2 vertexUV;
 layout(location = 2) in vec3 vertexColor;
 layout(location = 3) in vec3 vertexNormal;

uniform mat4 Projection;
uniform mat4 View;

uniform mat4 Scale;
uniform mat4 Rotation;
uniform mat4 Translation;

uniform vec4 Color;

out vec2 UV;
out vec4 OutColor;
out vec3 Normal;
out vec3 Position;

void main()
{
        
	mat4 Model = Translation * Rotation * Scale;
	mat4 MVP = Projection * View * Model;
        
        vec3 endpos = vertexPosition;
	vec4 Pos = MVP * vec4(endpos,1);

	gl_Position = Pos;
	
	UV = vertexUV;

	OutColor = Color;

	Normal = (Model * vec4(vertexNormal,0)).xyz;

	Position = (Model * vec4(vertexPosition,1)).xyz;

}

