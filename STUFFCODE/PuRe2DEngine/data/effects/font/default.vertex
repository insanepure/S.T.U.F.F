#version 330 core

 layout(location = 0) in vec3 vertexPosition;
 layout(location = 1) in vec2 vertexUV;
 layout(location = 2) in vec3 vertexColor;
 layout(location = 3) in vec3 vertexNormal;

uniform mat4 Projection;
uniform mat4 View;

uniform mat4 Scale;
uniform mat4 Rotation;
uniform mat4 Translation;

uniform vec2 UVPosition;
uniform vec2 UVSize;

out vec2 UV;
out vec3 Color;

void main()
{

	mat4 Model = Translation * Rotation * Scale;
	mat4 MVP = Projection * View * Model;
	gl_Position = MVP * vec4(vertexPosition,1);

	vec2 NUV = vec2((vertexUV.x*UVSize.x)+UVPosition.x,(vertexUV.y*UVSize.y)+UVPosition.y);
	UV = NUV;

	Color = vertexColor;

}

